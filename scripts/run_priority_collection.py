"""
Thu th·∫≠p d·ªØ li·ªáu cho 10 t·ªânh ∆∞u ti√™n cao (priority 2)
Test nhanh tr∆∞·ªõc khi ch·∫°y full
"""

import sys
from pathlib import Path

project_root = Path(__file__).parent.parent
sys.path.append(str(project_root))

from scripts.collect_city_data import CityDataCollector
from config.vietnam_cities import get_cities_by_priority

def main():
    """Thu th·∫≠p 10 t·ªânh ∆∞u ti√™n cao"""
    
    # L·∫•y t·ªânh priority 2 (quan tr·ªçng)
    priority_cities = list(get_cities_by_priority(2).keys())
    
    print("="*80)
    print("üöÄ THU TH·∫¨P 10 T·ªàNH ∆ØU TI√äN CAO")
    print("="*80)
    print()
    print(f"üìç Danh s√°ch ({len(priority_cities[:10])} t·ªânh):")
    
    from config.vietnam_cities import VIETNAM_CITIES
    for i, city in enumerate(priority_cities[:10], 1):
        print(f"   {i}. {VIETNAM_CITIES[city]['name_vi']}")
    
    print()
    print(f"‚è±Ô∏è  Th·ªùi gian ∆∞·ªõc t√≠nh: ~2-3 ph√∫t")
    print()
    
    choice = input("B·∫Øt ƒë·∫ßu thu th·∫≠p? (y/n): ").strip().lower()
    if choice != 'y':
        print("‚ùå ƒê√£ h·ªßy")
        return
    
    collector = CityDataCollector()
    results = collector.run_collection(
        cities_to_collect=priority_cities[:10],
        limit=10
    )
    
    print("\n‚úÖ HO√ÄN TH√ÄNH!")
    print(f"   Thu th·∫≠p th√†nh c√¥ng: {len([r for r in results.values() if 'error' not in r])}/10 t·ªânh")
    
    total = sum(r.get('hotels', 0) + r.get('restaurants', 0) + r.get('attractions', 0) for r in results.values())
    print(f"   T·ªïng ƒë·ªãa ƒëi·ªÉm: {total}")

if __name__ == "__main__":
    main()

